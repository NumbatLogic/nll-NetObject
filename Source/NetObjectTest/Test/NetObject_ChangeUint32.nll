namespace NumbatLogic
{
	namespace NetObject_ChangeUint32
	{
		class Test
		{
			public static void Run()
			{
				NetObject_Change::NetObjectStatic* pStaticInfo = own new NetObject_Change::NetObjectStatic();
				NetObject_Change::TestObject* pTestObjectA = own new NetObject_Change::TestObject();
				NetObject_Change::TestObject* pTestObjectB = own new NetObject_Change::TestObject();

				// set
				{
					Assert::Plz(pTestObjectA.GetGold() == 0);
					NetObject::Change* pChange = own new NetObject::ChangeUint32Set("Gold", 1337);
					NetObject_Change::Test::ApplyPackUnpackApplyEquals(pTestObjectA, pTestObjectB, pChange);
					Assert::Plz(pTestObjectA.GetGold() == 1337);
				}

				// add
				{
					NetObject::Change* pChange = own new NetObject::ChangeUint32Add("Gold", 1);
					NetObject_Change::Test::ApplyPackUnpackApplyEquals(pTestObjectA, pTestObjectB, pChange);
					Assert::Plz(pTestObjectA.GetGold() == 1338);
				}

				// subtract
				{
					NetObject::Change* pChange = own new NetObject::ChangeUint32Subtract("Gold", 1);
					NetObject_Change::Test::ApplyPackUnpackApplyEquals(pTestObjectA, pTestObjectB, pChange);
					Assert::Plz(pTestObjectA.GetGold() == 1337);
				}
			}
		}
	}
} 